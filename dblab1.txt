1.
create table employee00
(
employee_id number,
first_name varchar2(20),
last_name varchar2(20),
department_id number(10)
);

o/p: Table created.

INSERT ALL
    INTO employee00 (employee_id, first_name, last_name, department_id) VALUES (1, 'John', 'Doe', 101)
    INTO employee00 (employee_id, first_name, last_name, department_id) VALUES (2, 'Jane', 'Smith', 102)
    INTO employee00 (employee_id, first_name, last_name, department_id) VALUES (3, 'Alice', 'Johnson', 103)
    INTO employee00 (employee_id, first_name, last_name, department_id) VALUES (4, 'Bob', 'Williams', 104)
    INTO employee00 (employee_id, first_name, last_name, department_id) VALUES (5, 'Charlie', 'Brown', 105)
SELECT * FROM dual;

o/p:5 rows created.

select * from employee00;

o/p:

EMPLOYEE_ID FIRST_NAME           LAST_NAME            DEPARTMENT_ID
----------- -------------------- -------------------- -------------
          1 John                 Doe                            101
          2 Jane                 Smith                          102
          3 Alice                Johnson                        103
          4 Bob                  Williams                       104
          5 Charlie              Brown                          105


CREATE VIEW employee_basic_info AS 
SELECT employee_id, first_name, last_name
FROM employee00;

o/p: View created.

SQL> desc employee00;

o/p:
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 EMPLOYEE_ID                                        NUMBER
 FIRST_NAME                                         VARCHAR2(20)
 LAST_NAME                                          VARCHAR2(20)
 DEPARTMENT_ID                                      NUMBER(10)


2.
CREATE OR REPLACE PROCEDURE greet_user (p_name IN VARCHAR2) AS
BEGIN 
	DBMS_OUTPUT.PUT_LINE('Hello, ' || p_name || '!');
END;
/

O/P:
Procedure created.


BEGIN
	greet_user('John');
END;
/

O/P:
PL/SQL procedure successfully completed.


set serveroutput on;
o/p: 
Hello, John!
PL/SQL procedure successfully completed.


3.
CREATE OR REPLACE TRIGGER log_employee_insert
AFTER INSERT ON employee000
FOR EACH ROW
BEGIN
    DBMS_OUTPUT.PUT_LINE('New employee added: ' || :NEW.first_name || ' ' || :NEW.last_name);
END;
/

o/p:
Trigger created.



BEGIN
    :NEW.first_name := 'John';
    :NEW.last_name := 'Doe';
END;
/
